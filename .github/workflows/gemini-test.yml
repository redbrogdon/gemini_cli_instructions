name: 'Testing Gemini CLI Actions'

on:
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}'
  cancel-in-progress: true

defaults:
  run:
    shell: 'bash'

jobs:
  trying:
    runs-on: 'ubuntu-latest'
  #  timeout-minutes: 7
  #  permissions:
  #    contents: 'read'
  #    id-token: 'write'
  #    issues: 'read'
  #    pull-requests: 'read'
  #  outputs:
    steps:
      - name: 'Run Gemini'
        id: 'run_gemini'
        uses: 'google-github-actions/run-gemini-cli@v0' # ratchet:exclude
        with:
          gemini_api_key: '${{ secrets.GEMINI_API_KEY }}'
          gemini_model: 'gemini-2.5-pro'
          gemini_debug: true
          settings: |-
            {
              "coreTools": [
                "run_shell_command(gh)"
              ]
            }
          prompt: |-
            Fetch all pull requests merged in flutter/flutter from the
            provided start date to the provided end date. Be sure to retrieve
            *all* of the relevant pull requests, not just a portion of them.
            Retrieve the PR number, title, author, merge date, body, and
            comments using this command:

            ```shell
            gh pr list --repo flutter/flutter --search "merged:2025-09-01..2025-9-07 sort:merged-desc -author:engine-flutter-autoroll -author:flutter-roller -author:app/dependabot" --json number,title,author,mergedAt,body,comments --limit 1000
            ```

            Once you retrieve this information, output a summary for each pull
            request.

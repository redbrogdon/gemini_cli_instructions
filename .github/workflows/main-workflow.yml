name: 'Generate all GitHub reports'

on:
  schedule:
    - cron: '0 5 * * 1-5' # Runs every weekday at 1am EST
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}'
  cancel-in-progress: true

defaults:
  run:
    shell: 'bash'

jobs:
  calculate_dates:
    runs-on: 'ubuntu-latest'
    outputs:
      start_date: ${{ steps.calculate_start_date.outputs.start_date }}
      end_date: ${{ steps.calculate_end_date.outputs.end_date }}
    steps:
      - name: 'Calculate start date'
        id: calculate_start_date
        run: |
          DOW=$(date +'%u')

          if [[ "$DOW" -eq 1 ]]; then
            # If it's Monday, get Friday's date (3 days ago)
            START_DATE=$(date -d '3 days ago' +'%Y-%m-%d')
          elif [[ "$DOW" -eq 7 ]]; then
            # If it's Sunday, get Friday's date (2 days ago)
            START_DATE=$(date -d '2 days ago' +'%Y-%m-%d')
          else
            # Otherwise, just get yesterday's date
            START_DATE=$(date -d 'yesterday' +'%Y-%m-%d')
          fi

          echo "The last weekday was: $START_DATE"
          echo "START_DATE=$START_DATE" >> $GITHUB_OUTPUT
      - name: 'Calculate end date'
        id: calculate_end_date
        run: |
          END_DATE=$(date -d 'yesterday' +'%Y-%m-%d')
          echo "Yesterday was: $END_DATE"
          echo "END_DATE=$END_DATE" >> $GITHUB_OUTPUT

  generate_individual_reports:
    name: 'Generate report for ${{ matrix.repo.account }}/${{ matrix.repo.name }}'
    needs: calculate_dates
    strategy:
      fail-fast: false
      matrix:
        repo:
          - { account: 'dart-lang', name: 'ai' }
          - { account: 'dart-lang', name: 'language' }
          - { account: 'dart-lang', name: 'native' }
          - { account: 'dart-lang', name: 'sdk' }
          - { account: 'flutter', name: 'ai' }
          - { account: 'flutter', name: 'codelabs' }
          - { account: 'flutter', name: 'flutter' }
          - { account: 'flutter', name: 'packages' }
          - { account: 'flutter', name: 'samples' }
          - { account: 'flutter', name: 'website' }
    uses: ./.github/workflows/individual-report.yml
    permissions:
      contents: 'write'
      id-token: 'write'
      issues: 'read'
      pull-requests: 'read'
    with:
      repo_account: ${{ matrix.repo.account }}
      repo_name: ${{ matrix.repo.name }}
      start_date: ${{ needs.calculate_dates.outputs.start_date }}
      end_date: ${{ needs.calculate_dates.outputs.end_date }}
    secrets: inherit

  finalize_reports:
    name: 'Finalize and commit'
    needs: [calculate_dates, generate_individual_reports]
    permissions:
      contents: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@v4
      - name: 'Download report artifacts'
        uses: actions/download-artifact@v4
        with:
          path: /tmp/reports
      - name: 'Configure Git'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      - name: 'Create, commit, and push combined report'
        run: |
          COMBINED_REPORT_PATH="github_summary/reports/summary-combined-${{ needs.calculate_dates.outputs.start_date }}-to-${{ needs.calculate_dates.outputs.end_date }}.md"
          find /tmp/reports/ -type f -name '*.md' | sort | while read -r report; do
            cat "$report" >> "$COMBINED_REPORT_PATH"
            echo "" >> "$COMBINED_REPORT_PATH"
            echo "" >> "$COMBINED_REPORT_PATH"
          done
          cp -f "$COMBINED_REPORT_PATH" github_summary/reports/latest-combined.md
          git add "$COMBINED_REPORT_PATH" github_summary/reports/latest-combined.md
          git commit -m "Adds report for ${{ needs.calculate_dates.outputs.start_date }} to ${{ needs.calculate_dates.outputs.end_date }}."
          git push
